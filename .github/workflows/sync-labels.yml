name: Sync Repository Labels

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master

permissions:
  contents: read
  issues: write

jobs:
  ensure-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure standard labels exist
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const desired = [
              { name: 'dependencies',   color: '0366d6', description: 'Dependency updates' },
              { name: 'java',           color: 'b07219', description: 'Java-related changes' },
              { name: 'maven',          color: 'C71A36', description: 'Maven build/dependency changes' },
              { name: 'automated',      color: '0e8a16', description: 'Automated change by CI/bots' },
              { name: 'github-actions', color: '000000', description: 'GitHub Actions workflow updates' }
            ];

            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const { data: labels } = await github.rest.issues.listLabelsForRepo({ owner, repo, per_page: 100 });
            const existing = new Map(labels.map(l => [l.name.toLowerCase(), l]));

            for (const d of desired) {
              const found = existing.get(d.name.toLowerCase());
              if (!found) {
                await github.rest.issues.createLabel({ owner, repo, name: d.name, color: d.color, description: d.description });
                core.info(`Created label ${d.name}`);
              } else {
                let needsUpdate = false;
                if ((found.color || '').toLowerCase() !== d.color.toLowerCase()) needsUpdate = true;
                if ((found.description || '') !== d.description) needsUpdate = true;
                if (found.name !== d.name) needsUpdate = true; // normalize case
                if (needsUpdate) {
                  await github.rest.issues.updateLabel({ owner, repo, name: found.name, new_name: d.name, color: d.color, description: d.description });
                  core.info(`Updated label ${d.name}`);
                } else {
                  core.info(`Label ${d.name} already up to date`);
                }
              }
            }

